import React from 'react';
import Component from 'react-pure-render/component';
import {connect} from 'react-redux';
import Modal from '../components/modal';
import FlexModalWrapper from 'react-modal-wrapper';
import Signin from './signin';
import Signup from './signup';
import {actionCreators as userActions} from '../redux/actions/user';

const mapStateToProps = (state) => ({
  user: state.user
});

class Account extends Component {

  static propTypes = {
    user: React.PropTypes.object.isRequired,
    authUser: React.PropTypes.func.isRequired
  };

  renderUserId() {
    const signInModal = <b><a href="#">Sign in</a></b>;
    if (this.props.user.hasPassword) {
      return (
        <div>
          <span title="You are signed in!">
            {this.props.user.userId} [{this.props.user.ranking}]
          </span>
          <br />
          <b><a href="#" onClick={() => {
            //this.props.authUser(null, this.props.user.get('gameId'))
            localStorage.setItem('token', null);
            document.location.reload(true);
          }}>Sign out</a></b>
        </div>
      );
    } else {
      return (
        <div>
          <span title="This username was autogenerated. You should sign in!" style={{color: 'red'}}>
            {this.props.user.userId} [{this.props.user.ranking}]
          </span>
          <br />

          <FlexModalWrapper className="modal" closeOnEsc closeOnOutsideClick openByClickOn={signInModal}>
            <Modal>
              <h2>Hey, stay with us!</h2>
              <p>
                <i>{this.props.user.userId}</i> is autogenerated. You should <strong>SIGN UP</strong><br /> and get a long term
                account with password.
              </p>

              {this.props.user.accountAdded ?
                <div style={{textAlign: 'center', color: 'darkred'}}>Account added! Sign in now!</div> :
                <Signup />
              }
              <hr />
              <p>Or <strong>SIGN IN</strong> if you already have a long term account.</p>
              <Signin />
              <hr />
            </Modal>
          </FlexModalWrapper>
        </div>
      );
    }
  }

  render() {
    return (
      <div style={{float: 'left', marginRight: '13px', textAlign: 'right'}}>
        {this.renderUserId()}
      </div>
    );
  }
}

export default connect(mapStateToProps, userActions)(Account);
